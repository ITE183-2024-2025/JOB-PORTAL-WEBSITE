# Workflow for Code Standards Check and Fix
name: Code Standards and Tests

on:
  pull_request:
    branches:
      - master

  push:
    branches:
      - master

jobs:
  phpcs:
    name: PHP_CodeSniffer
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer

      - name: Install dependencies
        run: composer install --no-scripts --no-interaction

      - name: Run PHP_CodeSniffer
        run: vendor/bin/phpcs --standard=PSR12 src/

  phpcbf:
    name: PHP_CodeBeautifier
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer

      - name: Install dependencies
        run: composer install --no-scripts --no-interaction

      - name: Run PHP Code Beautifier and Fixer
        run: vendor/bin/phpcbf --standard=PSR12 src/

      - name: Commit changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          git commit -m "Apply PSR12 code style fixes"
        continue-on-error: true

      - name: Push changes
        run: git push
        if: success()

  phpunit:
    name: PHPUnit Tests
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer

      - name: Install dependencies
        run: composer install --no-scripts --no-interaction

      - name: Create .env file
        run: |
          cp .env.example .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_DATABASE=test_db" >> .env
          echo "DB_USERNAME=root" >> .env
          echo "DB_PASSWORD=password" >> .env

      - name: Wait for MySQL to be ready
        run: sleep 15

      - name: Run migrations and seed database
        run: php artisan migrate --seed

      - name: Run PHPUnit tests
        run: vendor/bin/phpunit --testdox
